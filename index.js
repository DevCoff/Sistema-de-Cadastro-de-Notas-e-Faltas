const prompt = require('prompt-sync')(); // Importa o m√≥dulo prompt-sync

const materiaCadastrada = []; // Usei lista para armazanar as informa√ß√µes do cadastro

function menu() { // Fun√ß√£o para exibir o menu inicial
    console.log('========================================');
    console.log('        SISTEMA DE CADASTRO - [NOTAS E FALTAS]');
    console.log('========================================');
    console.log('1. Cadastre no m√≠nimo 3 mat√©rias.');
    console.log('2. Para cada mat√©ria, deve ser solicitado no m√≠nimo 3 notas.');
    console.log('3. Voc√™ pode cadastrar quantas mat√©rias forem necess√°rias.');
    console.log('========================================');
}

function criarMateria(aluno) { // optei por utilizar objeto, pois estou mais familiarizado com eles em python.
    const cadastrarMateria = { // na const cadastrarMateria ser√° armazenada toda informa√ß√£o do aluno.
        nome: aluno,
        materia: "",
        notas: [],
        media: 0,
        faltas: 0,
        situacao: ""
    };

    materiaCadastrada.push(cadastrarMateria); // utilizei push para gravar as informa√ß√µes na lista criada anteriormente.
}

// Fun√ß√£o para cadastrar notas para uma mat√©ria espec√≠fica

function cadastrarNotas(index) {
    let somaNotas = 0;

    console.log('üìù Cadastro de notas:');
    for (let i = 0; i < 3; i++) { // Como o exercicio solicita para ter 3 notas, criei um loop for j√° pre definido com as 3 notas necess√°rias
        let nota;
        while (true) {
            nota = parseFloat(prompt(`Cadastre a nota ${i + 1}: `));// Solicita uma nota v√°lida do usu√°rio
            if (!isNaN(nota) && nota >= 0 && nota <= 10) { // Verifica se a nota √© v√°lida (entre 0 e 10)
                break;
            } else {
                console.log('‚ùå Nota inv√°lida. Por favor, digite um n√∫mero entre 0 e 10.');
            }
        }
        materiaCadastrada[index].notas.push(nota); // Adiciona a nota ao array de notas da mat√©ria
        somaNotas += nota; // Soma as notas para calcular a m√©dia posteriormente
    }

    const totalNotas = materiaCadastrada[index].notas.length;
    materiaCadastrada[index].media = (somaNotas / totalNotas).toFixed(2);  // Calcula a m√©dia das notas, o .toFixed(2) limita para 0.00 2 casas ap√≥s a virgula evitando um n√∫mero muito longo
    console.log('‚úÖ Notas cadastradas com sucesso!');
}

// Fun√ß√£o principal para cadastrar informa√ß√µes de uma nova mat√©ria para um aluno

function cadastrarInfoMateria(aluno) {
    criarMateria(aluno);  // Cria um novo objeto de mat√©ria para o aluno
    const index = materiaCadastrada.length - 1; //Obt√©m o √≠ndice utilizando o length para verificar qual o indix atual


    console.log(`\nüìò Cadastro da ${index + 1}¬™ mat√©ria | para o aluno ${aluno}:`); // Solicita e armazena o nome da mat√©ria
    while (true) { // fazemos uma verifica√ß√£o se a mat√©rio est√° correta, se for n√∫mero ou vazia o programa pergunta novamente para cadastrar
        materiaCadastrada[index].materia = prompt('Cadastre a mat√©ria: ');
        if (materiaCadastrada[index].materia == "") {
            console.log('‚ùå Nome da mat√©ria inv√°lida, por favor cadastre novamente!');
        }
        else if (isNaN(materiaCadastrada[index].materia)) {
            console.log(`‚úÖ Mat√©ria "${materiaCadastrada[index].materia}" cadastrada com sucesso.`)
            break;
        }
        else {
            console.log('‚ùå Nome da mat√©ria inv√°lida, por favor cadastre novamente!')
        }

    }
    while (true) { // outra valida√ß√£o, aqui verificamos se foi digitado um valor num√©rico
        materiaCadastrada[index].faltas = parseInt(prompt('Quantas faltas na mat√©ria: ')); // Solicita e armazena o n√∫mero de faltas
        if (!isNaN(materiaCadastrada[index].faltas) && materiaCadastrada[index].faltas >= 0) { // Verifica se √© um n√∫mero v√°lido e n√£o negativo
            break;
        } else {
            console.log('‚ùå Valor inv√°lido. Por favor, digite um valor n√∫merico positivo ou [0]');
        }
    }
    cadastrarNotas(index);

    // Verifica se o aluno foi aprovado ou reprovado
    if (materiaCadastrada[index].media >= 6 && materiaCadastrada[index].faltas <= 5) {
        materiaCadastrada[index].situacao = '\x1b[32mAprovado\x1b[0m';
    } else {
        materiaCadastrada[index].situacao = '\x1b[31mReprovado\x1b[0m';
    }
}

menu();

let aluno;
while (true) { // outra verifica√ß√£o, dessa vez vamos verificar se o nome √© uma string ou diferente de != "vazio"
    aluno = prompt('Cadastre o nome do aluno: ');
    if (isNaN(aluno) && aluno != "") {
        console.log(`\n‚ú® Aluno "${aluno}" cadastrado com sucesso!\n`)
        break; // Sai do loop se o nome do aluno for uma string v√°lida
    } else {
        console.log('‚ùå Nome inv√°lido. Por favor, escreva um nome v√°lido.');
    }
}

// Cadastro autom√°tico das 3 mat√©rias iniciais obrigatorio

for (let i = 0; i < 3; i++) {
    cadastrarInfoMateria(aluno);
}

// Pergunta se deseja cadastrar mais mat√©rias ap√≥s as 3 obrigat√≥rias
while (true) {
    const continuar = prompt('Deseja cadastrar outra mat√©ria? [1 - Sim / 0 - N√£o]: ');

    if (continuar == '0') {
        console.log('\nüåü Finalizando cadastro. Obrigado!\n');
        break;
    }
    else if (continuar === '1') {
        cadastrarInfoMateria(aluno);
    }
    else {
        console.log('‚ùå Op√ß√£o inv√°lida. Digite 1 para cadastrar ou 0 para sair!')
    }
}

console.log('\nüìö Mat√©rias cadastradas:');
materiaCadastrada.forEach((materia, index) => { // usamos forEacH para que seja mostrado as materias e os dados cadastrados, com o console.log, dessa forma ela le automaticamente todos os itens cadastrados.
    console.log(`${index + 1}. ${materia.materia.toUpperCase()}\nnotas: [${materia.notas}]\nm√©dia: ${materia.media}\nfaltas: ${materia.faltas}\nsitua√ß√£o: ${materia.situacao}\n`);
});
